<script src="https://cdn.tailwindcss.com"></script>
    <style>

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding: 0 10px;
        }

        .account-btn {
            background-color: #333;
            color: #fff;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .account-btn:hover {
            background-color: #555;
        }

        .page-title {
            font-size: 24px;
            font-weight: 600;
        }

        .sales-report-section {
            background-color: #1a1a1a;
            padding: 30px;
            border-radius: 12px;
            border: 1px solid #333;
            max-width: 1200px;
            margin: 0 auto;
        }

        .report-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .export-btn {
            background-color: #4a90e2;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .export-btn:hover {
            background-color: #357bd8;
        }

        .report-filters {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            align-items: center;
            justify-content: end;
            width: 100%;
        }

        .filter-select {
            padding: 8px 12px;
            border-radius: 8px;
            border: 1px solid #333;
            background-color: #2a2a2a;
            color: #e0e0e0;
            font-size: 14px;
            cursor: pointer;
            appearance: none; 
            background-image: url('data:image/svg+xml;utf8,<svg fill="white" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>');
            background-repeat: no-repeat;
            background-position: right 8px center;
            background-size: 16px;
            transition: border-color 0.3s;
        }

        .filter-select:hover {
            border-color: #4a90e2;
        }
        
        .custom-date-fields {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            align-items: center;
            display: none; 
        }
        
        .custom-date-fields input[type="date"] {
            padding: 8px 12px;
            border-radius: 8px;
            border: 1px solid #333;
            background-color: #2a2a2a;
            color: #e0e0e0;
            font-size: 14px;
            cursor: pointer;
            transition: border-color 0.3s, box-shadow 0.3s;
        }

        .custom-date-fields input[type="date"]:hover {
            border-color: #4a90e2;
            
            box-shadow: 0 0 8px rgba(74, 144, 226, 0.5);
        }

        .custom-date-fields input[type="date"]::-webkit-calendar-picker-indicator {
            filter: invert(1);
            transition: filter 0.3s;
        }

        .custom-date-fields input[type="date"]:hover::-webkit-calendar-picker-indicator {
            filter: invert(0.8); 
        }

        .apply-btn {
            background-color: #4a90e2;
            color: #fff;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        
        .apply-btn:hover {
            background-color: #357bd8;
        }
        
        .report-table-container {
            border-radius: 8px;
            border: 1px solid #333;
        }

        .report-table {
            width: 100%;
            border-collapse: collapse;
        }

        .table-header th {
            padding: 15px 12px;
            text-align: left;
            font-size: 12px;
            color: #999;
            text-transform: uppercase;
            font-weight: 500;
            border-bottom: 1px solid #333;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 150px;
        }
        
        .table-row {
            border-bottom: 1px solid #333;
            transition: background-color 0.3s;
        }
        
        .table-row:hover {
            background-color: #2a2a2a;
        }
        
        .table-row:last-child {
            border-bottom: none;
        }

        .table-row td {
            padding: 15px 12px;
            font-size: 14px;
            vertical-align: middle;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 150px;
        }
        
        .pagination {
            padding-top: 20px;
            display: flex;
            justify-content: flex-end;
            align-items: center;
            gap: 10px;
            margin-top: 8px;
        }

        .pagination-info {
            color: #999;
            font-size: 14px;
        }

        .pagination-controls {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .pagination-btn {
            background-color: #333;
            color: #fff;
            border: none;
            width: 32px;
            height: 32px;
            border-radius: 4px;
            font-size: 13px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.3s;
        }

        .pagination-btn:hover:not(:disabled) {
            background-color: #555;
        }

        .pagination-btn:disabled {
            background-color: #1a1a1a;
            color: #666;
            cursor: not-allowed;
        }

        .pagination-btn.active {
            background-color: #4a90e2;
        }

        @media (max-width: 768px) {
            .sales-report-section {
                padding: 20px;
            }

            .report-actions {
                flex-direction: column;
                align-items: stretch;
            }
            
            .report-filters {
                justify-content: space-between;
                width: 100%;
            }

            .filter-select {
                flex: 1;
            }
            
            .report-table,
            .report-table thead,
            .report-table tbody,
            .report-table th,
            .report-table td,
            .report-table tr {
                display: block;
            }
            
            .report-table thead tr {
                position: absolute;
                top: -9999px;
                left: -9999px;
            }

            .report-table tr {
                border: 1px solid #333;
                margin-bottom: 10px;
                padding: 10px;
                border-radius: 8px;
            }

            .report-table td {
                border: none;
                position: relative;
                padding: 8px 0 8px 30%;
                text-align: right;
            }

            .report-table td:before {
                content: attr(data-label) ": ";
                position: absolute;
                left: 10px;
                width: 28%;
                padding-right: 10px;
                white-space: nowrap;
                color: #666;
                font-size: 12px;
                text-transform: uppercase;
                text-align: left;
            }
        }
        
      
    </style>
        <input type="text" id="pageName" value="sales" hidden>
        <div class="header">
            <h1 class="page-title">Sales Report</h1>
            <button class="account-btn">Account</button>
        </div>

        <div class="sales-report-section">
            <div class="report-actions">
                <div>

                <button class="export-btn" onclick="createExport()">Export PDF</button>
                <button class="export-btn" onclick="createExcelExport()">Export Excel</button>
                </div>
                
                <div class="report-filters">
                    <select id="dateRangeSelect" class="filter-select">
                        <option value="daily">Daily</option>
                        <option value="weekly">This Week</option>
                        <option value="thismonthly">This Monthly</option>
                        <option value="yearly">Yearly</option>
                        <option value="custom">Custom Range</option>
                    </select>
                    <div class="w-full md:w-auto">
                        <select id="status-filter" class="w-full px-4 py-2 rounded-md border border-zinc-700 bg-zinc-800 text-white text-sm focus:outline-none focus:ring focus:ring-blue-500">
                            <option value="">Filter: All</option>
                            <option value="delivered">Delivered</option>
                            <option value="cancelled">Cancelled</option>
                            <option value="processing">Processing</option>
                            <option value="shipped">Shipped</option>
                            <option value="returned">Returned</option>
                            <option value="out-for-delivery">Out for delivery</option>
                        </select>
                    </div>
                </div>
                
                <div id="customDateFields" class="custom-date-fields">
                    <input type="date" id="startDate">
                    <span>to</span>
                    <input type="date" id="endDate">
                    <button id="applyCustomFilterBtn" class="apply-btn">Apply</button>
                </div>
            </div>
            <p style="font-weight: 600; font-size:larger; margin-top:8px;">Total Sale : <span id="total-sale" style="color: #a9ceff; font-size:28px">₹0.00</span></p>
            <p style="font-weight: 600; font-size:larger; margin-top:8px;">Unpaid Amount : <span id="unpaid-amount" style="color: #a9ceff;">₹0.00</span></p>
            <p style="font-weight: 600; font-size:larger; margin-top:8px; margin-bottom:16px">Cancelled Amount : <span id="cancelled-amount" style="color: #a9ceff;">₹0.00</span></p>
            <div class="report-table-container">
                <table class="report-table" id="salesTable">
                    <thead class="table-header">
                        <tr>
                            <th>Buyer</th>
                            <th>Product Name</th>
                            <th>Product Id</th>
                            <th>Order Id</th>
                            <th>Qty</th>
                            <th>Price</th>
                            <th>GST(18%)</th>
                            <th>Category</th>
                            <th>Status</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        
                    </tbody>
                </table>
            </div>

            <div class="pagination pagination-container">
                <div class="pagination-controls">
                    <button class="pagination-btn" id="prevPageBtn" disabled>
                        &lt;
                    </button>
                    <button class="pagination-btn active" id="currentPageBtn">
                        1
                    </button>
                    <button class="pagination-btn" id="nextPageBtn">
                        &gt;
                    </button>
                </div>
            </div>
        </div>


<script src="/scripts/formater.js"></script>
    <script>

        let currentUrl 

        document.addEventListener('DOMContentLoaded', () => {

            const dateRangeSelect = document.getElementById('dateRangeSelect');
            const customDateFields = document.getElementById('customDateFields');
            const salesTableBody = document.querySelector('#salesTable tbody');
            const filterSelect = document.getElementById("status-filter")
            console.log(filterSelect.value)
            
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('startDate').setAttribute('max', today);
            document.getElementById('endDate').setAttribute('max', today);
            
           
            function handleFilterChange() {

                const selectedValue = dateRangeSelect.value;
                const filterValue = filterSelect.value
                console.log(filterValue)
                let startDate 
                let endDate

                if(selectedValue === 'daily'){

                    startDate = new Date()
                    startDate.setHours(0,0,0,0)
                    startDate = startDate.toISOString()
                    endDate = "null"

                } else if(selectedValue === 'weekly'){

                    endDate = new Date().toISOString()
                    startDate = getStartOfWeek(endDate)

                } else if(selectedValue === 'thismonthly'){

                    endDate = new Date()
                    startDate = new Date(endDate.getFullYear(), endDate.getMonth(), 1).toISOString()
                    endDate = endDate.toISOString()

                } else if(selectedValue === 'yearly'){

                    endDate = new Date()
                    startDate = new Date(endDate.getFullYear(), 0, 1).toISOString()
                    endDate = endDate.toISOString()

                }

                if(selectedValue === 'custom'){

                    customDateFields.style.display = 'flex';

                }else {

                    customDateFields.style.display = 'none';

                }

                
                
                if(selectedValue !== "custom"){

                    renderTable(`/admin/api/sales-report?startDate=${startDate}&endDate=${endDate}&filter=${filterValue}&currentPage=1&limit=10`);

                }
            }

           
            handleFilterChange();

            dateRangeSelect.addEventListener('change', handleFilterChange);
            filterSelect.addEventListener('change', handleFilterChange);
            
            document.getElementById('applyCustomFilterBtn').addEventListener('click', () => {
                let startDate = new Date(document.getElementById('startDate').value);
                let endDate = new Date(document.getElementById('endDate').value);
                startDate = startDate.toISOString()
                endDate = endDate.toISOString()

                if (startDate && endDate) {
                    renderTable(`/admin/api/sales-report?startDate=${startDate}&endDate=${endDate}&currentPage=1&limit=10`)
                } 
            });



            function getStartOfWeek(date) {
                const d = new Date(date);
                const day = d.getDay(); 

                const diff = d.getDate() - day + (day === 0 ? -6 : 1);

                return new Date(d.setDate(diff)).toISOString();
            }
            
        });


        function renderTable(url) {
            currentUrl = url

            const dateRangeSelect = document.getElementById('dateRangeSelect');
            const customDateFields = document.getElementById('customDateFields');
            const salesTableBody = document.querySelector('#salesTable tbody');
            
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('startDate').setAttribute('max', today);
            document.getElementById('endDate').setAttribute('max', today);

                const fontColor = {

                    processing: "orange",
                    shipped: "yellow",
                    "out-for-delivery": "chartreuse",
                    delivered: "green",
                    returned: "gray",
                    cancelled: "red"

                };

                let totalSales = 0
                let pendingSale = 0
                let totalDiscount = 0 

                fetch(url)
                .then(async response =>{

                    const res = await response.json()
                    if(!response.ok) throw new Error(res.message || "Check your Internet")
                    return res

                })
                .then(data =>{

                    salesTableBody.innerHTML = ""
                    if(data.report.length == 0){

                        const row = document.createElement('tr');
                        row.className = 'table-row';
                        row.innerHTML = `<td colspan="9" data-label="NoOrder" style="text-align:center;color:#999;">No Orders found!</td>`
                        salesTableBody.appendChild(row);

                    }

                    totalSales = data.totalSales.amount 
                    pendingSale = data.unpaidOrders.amount
                    totalDiscount = data.discountAmount

                    data.report.forEach(sale => {

                        let couponDiscount = sale.couponDiscount ? sale.couponDiscount/ sale.totalItems : 0
                        let gstAmount = sale.gstAmount/sale.totalItems


                        const row = document.createElement('tr');
                        row.className = 'table-row';
                        row.innerHTML = `
                            <td data-label="Buyer">${sale.address.name}</td>
                            <td data-label="Product Name">${sale.orderItems.productName}</td>
                            <td data-label="Product Id">${sale.orderItems.productId}</td>
                            <td data-label="Order Id">${sale.orderId}</td>
                            <td data-label="Qty">${sale.orderItems.quantity}</td>
                            <td data-label="Price">${formatINR(sale.orderItems.offerPrice)}</td>
                            <td data-label="GST">${formatINR(gstAmount)}</td>
                            <td data-label="Category">${sale.category[0].name}</td>
                            <td data-label="Status" style="color:${fontColor[sale.status]}">${sale.orderItems.status}</td>
                            <td data-label="Total">${formatINR(((sale.orderItems.offerPrice + gstAmount) - couponDiscount) * sale.orderItems.quantity)}</td>
                        `;
                        salesTableBody.appendChild(row);

                    });

                    document.getElementById("total-sale").textContent = formatINR(totalSales)
                    document.getElementById("unpaid-amount").textContent = formatINR(pendingSale)
                    document.getElementById("cancelled-amount").textContent = formatINR(data.cancelledOrders.amount)

                    localStorage.setItem('salesCurrentPage', data.currentPage)

                    const pagination = document.querySelector('.pagination-container')
                    // setting url for next Page
                    let tempUrl = new URL(url, window.location.origin);
                    let currentPage = parseInt(tempUrl.searchParams.get("currentPage"), 10);
                    tempUrl.searchParams.set("currentPage", currentPage+1);

                    let nextUrl = tempUrl.pathname + '?' + tempUrl.searchParams.toString();
                    
                    // setting url for previous page
                    tempUrl = new URL(url, window.location.origin);
                    currentPage = parseInt(tempUrl.searchParams.get("currentPage"), 10);
                    tempUrl.searchParams.set("currentPage", currentPage-1);

                    let prevUrl = tempUrl.pathname + '?' + tempUrl.searchParams.toString();

                    
                    pagination.innerHTML = `

                        <div class="pagination-controls">
                            <button onclick="renderTable('${prevUrl}')" class="pagination-btn" id="prevPageBtn" style="${data.currentPage>1? "" : "display:none;"}">&lt;</button>
                            <button class="pagination-btn" active">
                                ${data.currentPage}
                            </button>
                            <button onclick="renderTable('${nextUrl}')" class="pagination-btn" id="nextPageBtn" style="${data.currentPage<data.totalPages? "":"display:none;"}">&gt;</button>
                        </div>

                    `
                })
                
                
            }


            function createExport(){
                const params = new URLSearchParams(currentUrl.split("?")[1]);

                const startDate = params.get("startDate");
                const endDate = params.get("endDate");

                window.location.href = `/admin/api/sales-report/download?startDate=${startDate}&endDate=${endDate}` 
                    
            }

            function createExcelExport(){
                const params = new URLSearchParams(currentUrl.split("?")[1]);

                const startDate = params.get("startDate");
                const endDate = params.get("endDate");

                window.location.href = `/admin/api/sales-report/download/excel?startDate=${startDate}&endDate=${endDate}` 
                    
            }

    </script>
