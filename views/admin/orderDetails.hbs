<input type="hidden" id="pageName" value="orders">

<!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

<style>
        .scroll-container {
            -ms-overflow-style: none;  /* IE and Edge */
            scrollbar-width: none;     /* Firefox */
        }
        .scroll-container::-webkit-scrollbar {
            display: none;             /* Chrome, Safari, Opera */
        }
        .modal {
            transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
        }
        .modal.hidden {
            opacity: 0;
            visibility: hidden;
        }
</style>

<div class="max-w-4xl mx-auto">
        {{#if orderDetails}}
        <h1 class="text-3xl font-bold mb-8 text-center text-gray-100">Order Details</h1>

        <input type="text" value="{{orderDetails.orderId}}" id="order-id" hidden>

        <!-- Order Card -->
        <div id="order-card" class="bg-zinc-900 rounded-2xl shadow-xl p-6 sm:p-8 border border-zinc-700">
            <!-- Order Status & Reference -->
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6 pb-4 border-b border-gray-700">
                <div class="flex items-center mb-4 md:mb-0">
                    <span class="text-xs sm:text-sm font-medium text-gray-400 mr-2">Status:</span>
                    <div id="status-badge" class="px-3 py-1 text-xs font-semibold rounded-full capitalize bg-blue-600">{{orderDetails.status}}</div>
                </div>
                <div class="text-sm text-gray-400">
                    Reference No. <span id="orderId" class="text-gray-200 font-medium ml-1">{{orderDetails.orderId}}</span>
                </div>
            </div>

            <!-- Order Details Grid -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-y-6 gap-x-12">
                <!-- Customer Details Column -->
                <div class="space-y-4">
                    <h2 class="text-xl font-semibold text-gray-200 mb-2 flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-400" viewBox="0 0 24 24" fill="currentColor"><path d="M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2zm0 4a3.5 3.5 0 1 1-3.5 3.5A3.5 3.5 0 0 1 12 6zm-5 13a7 7 0 0 1 10 0h-10z"/></svg>
                        Customer Information
                    </h2>
                    <div class="flex items-center text-sm">
                        <span class="text-gray-400 min-w-[120px] font-medium">Name:</span>
                        <span id="customerName" class="text-white font-normal break-words flex-1">{{orderDetails.name}}</span>
                    </div>
                    <div class="flex items-center text-sm">
                        <span class="text-gray-400 min-w-[120px] font-medium">Mobile:</span>
                        <span id="customerMobile" class="text-white font-normal break-words flex-1">{{orderDetails.mobile}}</span>
                    </div>
                    <div class="flex flex-col items-start text-sm">
                        <span class="text-gray-400 min-w-[120px] font-medium">Shipping Address:</span>
                        <span id="shippingAddress" class="text-white font-normal break-words flex-1 ml-2"> {{orderDetails.shippingAddress}}</span>
                    </div>
                </div>

                <!-- Order Summary & Items Column -->
                <div class="space-y-4">
                    <h2 class="text-xl font-semibold text-gray-200 mb-2 flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-400" viewBox="0 0 24 24" fill="currentColor"><path d="M12 2L2 6.5v10.75l10 4.5 10-4.5V6.5L12 2zm0 2.25l7.5 3.375-7.5 3.375L4.5 7.125 12 4.25zm0 15.25l-7-3.15V8.6l7 3.15zm8-13.35v6.5l-7 3.15v-6.5z"/></svg>
                        Order Summary
                    </h2>
                    <div class="flex items-center text-sm">
                        <span class="text-gray-400 min-w-[120px] font-medium">Payment Method:</span>
                        <span id="paymentMethod" class="text-white font-normal flex-1">{{orderDetails.paymentMethod}}</span>
                    </div>
                    <div class="flex items-center text-sm">
                        <span class="text-gray-400 min-w-[120px] font-medium">Delivery Date:</span>
                        <span id="deliveryDate" class="text-white font-normal flex-1">{{orderDetails.orderDate}}</span>
                    </div>
                    <div class="flex items-center text-sm">
                        <span class="text-gray-400 min-w-[120px] font-medium">Shipping Cost:</span>
                        <span id="shippingCost" class="text-white font-normal flex-1">₹{{orderDetails.deliveryCharge}}</span>
                    </div>
                    <div class="flex items-center text-sm">
                        <span class="text-gray-400 min-w-[120px] font-medium">Discount:</span>
                        <span id="discount" class="text-white font-normal flex-1">₹{{orderDetails.discount}}</span>
                    </div>
                    <div class="flex items-center text-sm font-bold text-lg pt-2 border-t border-gray-700 mt-4">
                        <span class="text-gray-300 min-w-[120px]">Total Amount:</span>
                        <span id="totalAmount" class="text-white flex-1">₹{{orderDetails.total}}</span>
                    </div>
                </div>
            </div>

            <!-- Items Ordered Section -->
            <div class="mt-8 pt-6 border-t border-gray-700">
                <h2 class="text-xl font-semibold text-gray-200 mb-4 flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-blue-400" viewBox="0 0 24 24" fill="currentColor"><path d="M17.25 10.5V11a.75.75 0 0 1-1.5 0v-.5h-8.5v.5a.75.75 0 0 1-1.5 0V10.5h-1a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1h15a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-1zM10.75 7.5a.75.75 0 0 1-.75.75h-.5v.5a.75.75 0 0 1-1.5 0v-.5H6v-.75h1.25a.75.75 0 0 1 .75-.75h.5V5.5h-1.5a.75.75 0 0 1-.75-.75.75.75 0 0 1 .75-.75h1.5a.75.75 0 0 1 .75.75.75.75 0 0 1-.75.75H10.75zm1.5 0a.75.75 0 0 1-.75.75h-.5v.5a.75.75 0 0 1-1.5 0v-.5h-1.5a.75.75 0 0 1-.75-.75.75.75 0 0 1 .75-.75H11v-.75a.75.75 0 0 1 .75-.75h1.5a.75.75 0 0 1 .75.75v.75H14.5a.75.75 0 0 1 .75.75.75.75 0 0 1-.75.75h-1.5v.5a.75.75 0 0 1-1.5 0v-.5zM17.25 7.5a.75.75 0 0 1-.75.75h-.5v.5a.75.75 0 0 1-1.5 0v-.5h-1.5a.75.75 0 0 1-.75-.75.75.75 0 0 1 .75-.75h1.5a.75.75 0 0 1 .75.75v.75a.75.75 0 0 1-.75.75h-.5a.75.75 0 0 1-.75.75.75.75 0 0 1-.75-.75v-.5a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 .75.75.75.75 0 0 1-.75.75h-.5a.75.75 0 0 1-.75-.75v-.5a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 .75.75z"/></svg>
                    Items Ordered
                </h2>
                <ul id="items-list" class="space-y-2 text-sm text-gray-300">
                    {{#each orderDetails.items}}
                        <li class="flex justify-between items-center">
                            <span class="text-gray-300 font-normal">{{inc @index}}. {{this.name}}</span>
                            <div class="flex">
                                
                                {{#if (eq this.status "returned")}}
                                    <div id="status-badge" class="px-3 py-1 text-xs font-semibold rounded-full capitalize bg-red-600">{{this.status}}</div>
                                    {{#if this.returnApproved}}
                                    {{else}}
                                        <button data-itemid="{{this.itemId}}" data-variantid="{{this.variantId}}" data-orderid="{{orderDetails.orderId}}" onclick="approveReturn(this)" class="ml-2 px-3 py-1 text-xs font-semibold rounded-full capitalize bg-blue-600">Approve</button>
                                    {{/if}}
                                {{else}}
                                    <div id="status-badge" class="px-3 py-1 text-xs font-semibold rounded-full capitalize bg-blue-600">{{this.status}}</div>
                                {{/if}}
                                <span class="text-gray-500 ml-2">({{this.quantity}} x ₹{{this.offerPrice}})</span>

                            </div>
                        </li>
                    {{/each}}
                </ul>
            </div>

            <!-- Update Status Action -->
            <div class="flex flex-col sm:flex-row items-center justify-center mt-8 pt-6 border-t border-gray-700">
                <span class="text-gray-400 font-medium mr-4 mb-2 sm:mb-0">Change Status:</span>
                <div class="flex flex-col sm:flex-row items-center gap-4 w-full sm:w-auto">
                    <select id="status-select" class="bg-gray-700 text-white rounded-lg py-2 px-4 focus:ring-2 focus:ring-blue-500 focus:outline-none cursor-pointer w-full sm:w-auto">
                        <option value="processing" {{#if (eq orderDetails.status 'processing')}}selected{{/if}}>Processing</option>
                        <option value="shipped" {{#if (eq orderDetails.status 'shipped')}}selected{{/if}}>Shipped</option>
                        <option value="out-for-delivery" {{#if (eq orderDetails.status 'out-for-delivery')}}selected{{/if}}>Out for Delivery</option>
                        <option value="delivered" {{#if (eq orderDetails.status 'delivered')}}selected{{/if}}>Delivered</option>
                        <option value="cancelled" {{#if (eq orderDetails.status 'cancelled')}}selected{{/if}}>Cancelled</option>
                    </select>
                    <button id="update-status-btn" class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-6 rounded-lg shadow-md transition-colors duration-200 w-full sm:w-auto">
                        Update Status
                    </button>
                </div>
            </div>
        </div>
        {{/if}}
    </div>

<script>
    document.addEventListener("DOMContentLoaded", ()=>{
        const updateBtn = document.getElementById('update-status-btn');

        updateBtn.addEventListener('click', () => {
            const statusSelect = document.getElementById('status-select');
            const newStatus = statusSelect.value;

            Swal.fire({
                title: "Confirm Update",
                text: `Are you sure you want to change the status to "${newStatus}"?`,
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#4a90e2",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, update it!",
                background: "#242428",
                color: "#ffffff",
                customClass: {
                    popup: 'my-swal-border'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    const orderId = document.getElementById('orderId').textContent.trim()
                    fetch(`/admin/orders/update-status?orderId=${orderId}`, {
                        method: "PATCH",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ status: newStatus })
                    })
                        .then(response => {
                            if (!response.ok) throw new Error("Can't fetch")
                            Swal.fire({
                                title: "Updated!",
                                text: "The order status has been updated.",
                                icon: "success",
                                background: "#242428",
                                color: "#ffffff",
                                customClass: {
                                    popup: 'my-swal-border'
                                }
                            });
                        })
                        .catch(error => {
                            console.log(error)
                        })

                }
            });
        });



    })

    function approveReturn(button){

        Swal.fire({
            title: "Are you sure?",
            text: "Do you want to approve the return request",
            icon: "warning",
            background: "#242428",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Approve",
            customClass: {
                popup: 'my-swal-border'
            }
        }).then((result) => {
        if (result.isConfirmed) {
            
            const data = {
                itemId:button.dataset.itemid,
                variantId:button.dataset.variantid,
                orderId:document.getElementById("order-id").value.trim(),
                returnApproved:true
            }

            fetch("/admin/api/approve-return", {
                method:"POST",
                headers:{"Content-Type": "application/json"},
                body:JSON.stringify(data)
            })
            .then(async response =>{
                const res = await response.json()
                if(!response.ok) throw new Error(res.message || "Check your internet connection")

                Swal.fire({
                    title: "Approved!",
                    text: "The return order has been approved",
                    icon: "success",
                    background: "#242428",
                    color: "#ffffff",
                    timer:2000,
                    customClass: {
                        popup: 'my-swal-border'
                    }
                });

            })
            .catch(error =>{
                Swal.fire({
                    title: "Failed",
                    text: error.message,
                    icon: "warning",
                    background: "#242428",
                    color: "#ffffff",
                    customClass: {
                        popup: 'my-swal-border'
                    }
                });
            })



        }
        });


        
    }
</script>