
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #121212;
            color: #E0E0E0;
        }
        .rating-star {
            color: #f59e0b; /* amber-500 */
        }

        #thumbnail-image{
            max-height: 360px;
        }

        .carousel-container {
            overflow: hidden;
            position: relative;
            max-width: 80%;
        }
        .carousel-track {
            display: flex;
            transition: transform 0.5s ease-in-out;
        }
        .carousel-slide {
            min-width: 100%;
            box-sizing: border-box;
        }
        .carousel-dots {
            position: absolute;
            bottom: 1rem;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 0.5rem;
        }
        .carousel-dot {
            width: 0.75rem;
            height: 0.75rem;
            border-radius: 50%;
            background-color: rgba(255, 255, 255, 0.5);
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        .carousel-dot.active {
            background-color: white;
        }

        /* New styles for the "Packed for Shipping" animation */
        .packed-animation {
            animation: packed-effect 2s infinite;
            transition: 1s ease-in-out;
        }
        @keyframes packed-effect {
            0% { transform: scale(1); background-color: #3a3a3a; }
            50% { transform: scale(1.05); background-color: #4CAF50; }
            100% { transform: scale(1); background-color: #4CAF50; }
        }

        @media (max-width:724px) {
            .carousel-container{
                max-width: 100%;
            }
        }
    </style>
        <div class="flex flex-col lg:grid lg:grid-cols-4 lg:gap-12">
            
            <!-- Left Column: Game Details (Top Part) -->
            {{#if product}}
            <input type="text" value="{{product._id}}" id="productId" hidden>
            <input type="text" value="{{product.variants.[0]._id}}" id="variantId" hidden>
            <div class="lg:col-span-3 order-1">
                <h1 class="text-3xl md:text-4xl font-bold text-white mb-12">{{product.name}}</h1>

                <div class="carousel-container rounded-lg border border-[#404044] max-h-[500px] w-full mx-auto">
                    <div class="carousel-track">
                        {{#each product.coverImage}}
                        <div class="carousel-slide"><img src="{{this}}" class="w-full h-full object-cover"></div>
                        {{/each}}
                    </div>
                    <div class="carousel-dots"></div>
                </div>

                <div class="mt-8">
                    <h2 class="text-xl font-bold text-white mb-3">Genre</h2>
                    <span class="bg-[#2a2a2a] border border-[#404044] text-gray-300 px-3 py-1 rounded-full text-sm">{{product.categoryId.name}}</span>
                </div>

                <div class="mt-8">
                    <h2 class="text-xl font-bold text-white mb-3">About the game</h2>
                    <p class="text-gray-400 leading-relaxed">{{product.description}}</p>
                </div>

                <div class="mt-10">
                    {{#if product.variants}}<h2 class="text-2xl font-bold text-white mb-6">Editions</h2>{{/if}}
                    <div class="flex space-x-4 overflow-x-auto pb-4 -mx-4 px-4">
                        {{#each product.variants}}
                            {{#if (ls this.stock 1)}}
                                <div class="bg-[#1E1E1E] border border-[#404044] rounded-lg p-3 flex-shrink-0 w-40 relative overflow-hidden">
                                    <div class="absolute top-12 left-[-50px] bg-red-600 text-white text-xs font-bold px-14 py-1 rotate-[-45deg] shadow-lg">
                                        OUT OF STOCK
                                    </div>
                                    <img src="{{this.thumbnail}}" class="rounded-md w-full aspect-[3/4] object-cover opacity-[0.2]" alt="GTA Premium Edition">
                                    <h4 class="font-semibold mt-3 truncate text-sm opacity-[0.2]">{{this.name}}</h4>
                                    <p class="text-md font-bold mt-2 opacity-[0.2]">₹{{this.offerPrice}}</p>
                                    <div class="flex justify-between items-center opacity-[0.2]">
                                        <p class="text-md font-light text-gray-500 line-through">₹{{this.price}}</p>
                                        <button class="bg-purple-600 text-xs px-3 py-1 rounded-md" onclick="fetchPurchaseInfo({{@index}})" hidden>Add</button>
                                    </div>
                                </div>
                            {{else}}
                                <div class="bg-[#1E1E1E] border border-[#404044] rounded-lg p-3 flex-shrink-0 w-40">
                                    <img src="{{this.thumbnail}}" class="rounded-md w-full aspect-[3/4] object-cover" alt="GTA Premium Edition">
                                    <h4 class="font-semibold mt-3 truncate text-sm">{{this.name}}</h4>
                                    <p class="text-md font-bold mt-2">₹{{this.offerPrice}}</p>
                                    <div class="flex justify-between items-center">
                                        <p class="text-md font-light text-gray-500 line-through">₹{{this.price}}</p>
                                        <button class="bg-purple-600 text-xs px-3 py-1 rounded-md" onclick="fetchPurchaseInfo({{@index}})">Add</button>
                                    </div>
                                </div>
                            {{/if}}
                        {{/each}}
                    </div>
                </div>
            </div>

            <!-- Right Column: Purchase Info -->
            <div class="lg:col-span-1 lg:row-span-2 order-2 lg:order-2" id="purchase-info">
                
            </div>
            
            
            {{else}}
                <div class="" style="height: 70dvh; display:flex; align-items:center; justify-content:center;">
                    <h2 class="text-xl font-bold text-white mb-3" style="font-size: 34px;">Page not found</h2>
                    <p class="text-gray-400 leading-relaxed">
                    {{product.description}}
                    </p>
                </div>
            {{/if}}
            <div class="mt-10 lg:col-span-3 order-4">
                    {{#if relatedProducts}}<h2 class="text-2xl font-bold text-white mb-6">Related Products</h2>{{/if}}
                    <div class="flex space-x-4 overflow-x-auto pb-4 -mx-4 px-4">
                        {{#each relatedProducts}}
                        <a href="/product_details?productId={{this._id}}">
                        <div class="bg-[#1E1E1E] border border-[#404044] rounded-lg p-3 flex-shrink-0 w-40">
                            <img src="{{this.variants.0.thumbnail}}" class="rounded-md w-full aspect-[3/4] object-cover" alt="GTA Premium Edition">
                            <h4 class="font-semibold mt-3 truncate text-sm">{{this.variants.0.name}}</h4>
                            <div class="flex justify-between items-center mt-2">
                                <p class="text-md font-bold">₹{{this.variants.0.offerPrice}}</p>
                                <p class="text-gray-500 text-sm line-through">₹{{this.variants.0.price}}</p>
                            </div>
                        </div>
                        </a>
                        {{/each}}
                    </div>
                </div>
        </div>
    
<script>
        document.addEventListener('DOMContentLoaded', function () {
            fetchPurchaseInfo(0)
            const track = document.querySelector('.carousel-track');
            const slides = Array.from(track.children);
            const dotsContainer = document.querySelector('.carousel-dots');
            let slideIndex = 0;
            let intervalId;

            // Create dots
            slides.forEach((_, i) => {
                const dot = document.createElement('div');
                dot.classList.add('carousel-dot');
                if (i === 0) dot.classList.add('active');
                dot.addEventListener('click', () => {
                    goToSlide(i);
                    resetInterval();
                });
                dotsContainer.appendChild(dot);
            });
            
            const dots = Array.from(dotsContainer.children);

            function updateCarousel() {
                track.style.transform = 'translateX(-' + slideIndex * 100 + '%)';
                dots.forEach(dot => dot.classList.remove('active'));
                dots[slideIndex].classList.add('active');
            }

            function goToSlide(index) {
                slideIndex = index;
                updateCarousel();
            }

            function nextSlide() {
                slideIndex = (slideIndex + 1) % slides.length;
                updateCarousel();
            }

            function startInterval() {
                intervalId = setInterval(nextSlide, 3000);
            }

            function resetInterval() {
                clearInterval(intervalId);
                startInterval();
            }

            startInterval();
        });

       function addToCart(button){
            let addToCartBtn = document.getElementById('add-to-cart-btn')
            const productId = document.getElementById('productId').value.trim()
            const originalText = addToCartBtn.textContent;
            addToCartBtn.textContent = 'Packing for Shipping...';
            addToCartBtn.classList.add('bg-green-checkout', 'packed-animation');
            const variantId = document.getElementById('variantId').value.trim()

            fetch(`/cart/add?_id=${productId}&variantId=${variantId}`,{method:"POST"})
                .then(response =>{
                    if(!response.ok) throw new Error("Product cant add to cart")
                    console.log("fetched to cart")
                    setTimeout(() => {
                        addToCartBtn.textContent = originalText;
                        addToCartBtn.classList.remove('bg-green-checkout', 'packed-animation');
                    }, 2000); 
                    return response.json()
                })
                .then(data =>{
                    console.log(data)
                    // can use to increment cart icon value
                })
                .catch(error => console.log(error))
       }

       function addToWishlist(button){
        let addToWishlistBtn = document.getElementById("add-to-wishlist-btn")
        const productId = document.getElementById("productId").value.trim()
        const originalText = addToWishlistBtn.textContent;
        addToWishlistBtn.textContent = 'Adding...';
        addToWishlistBtn.classList.add('bg-green-checkout', 'packed-animation');
        const variantId = document.getElementById('variantId').value.trim()

        fetch(`/api/wishlist/add?_id=${productId}&variantId=${variantId}`,{method:"POST"})
                .then(async response =>{
                    const res = await response.json()
                    if(!response.ok) throw new Error(res.message || "Product cant add to wishlist")
                    console.log("fetched to wishlist")
                    setTimeout(() => {
                        addToWishlistBtn.textContent = originalText;
                        addToWishlistBtn.classList.remove('bg-green-checkout', 'packed-animation');
                    }, 2000); 
                    return res
                })
                .then(data =>{
                    console.log(data)
                    // can use to increment cart icon value
                })
                .catch(error => console.log(error))

       }




    function fetchPurchaseInfo(index){
        let productId = document.getElementById("productId").value.trim()
        fetch(`/product-info?index=${index}&productId=${productId}`)
            .then(response =>{
                if(!response.ok) throw new Error("Failed to fetch product info")
                console.log("Fetched correctly")
                return response.json()
            })
            .then(data =>{
                let badge 
                if(index>0){
                    badge = "Edition"
                }else{
                    badge = "Base Game"
                }
                document.getElementById('variantId').value = data._id
                const infoParant = document.getElementById("purchase-info")
                let html
                if(data.stock <1){
                    html = `
                    <div class="lg:sticky top-24 max-w-md mx-auto lg:max-w-full lg:mx-0">
                    <div class=" rounded-lg p-4 mt-16 pt-7 relative">
                        <div class="flex justify-center opacity-[0.2]">
                            <img src="${data.thumbnail}" alt="GTA V Cover Small" class="rounded-md aspect-[3/4] object-cover" id="thumbnail-image" onerror="this.onerror=null;this.src='https://placehold.co/300x400/1e1e1e/ffffff?text=GTA+V';">
                        </div>
                        <p class="text-gray-400 text-sm mt-4 opacity-[0.2]">${badge}</p> 
                        <div class="flex items-baseline space-x-2 mt-1">
                            <p class="text-lg text-red-500 ">Out of stock</p>
                        </div>

                        <div class="mt-6 space-y-3">
                            <button class="w-full bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 rounded-lg transition-colors duration-200 opacity-[0.2]" hidden>Buy Now</button>
                            <button id="add-to-cart-btn" class="w-full bg-[#3a3a3a] hover:bg-[#4a4a4a] text-white font-bold py-3 rounded-lg transition-colors duration-200 opacity-[0.2]" data-variantId="${data._id}" onclick="addToCart(this)" hidden>Add to Cart</button>
                            <button id="add-to-wishlist-btn" class="w-full border border-[#404044] hover:bg-[#2a2a2a] text-white font-bold py-3 rounded-lg transition-colors duration-200" onclick="addToWishlist(this)">Add to Wishlist</button>
                        </div>
                    </div>
                     <div class="text-sm text-gray-400 mt-6 space-y-3">
                        
                    </div>
                </div>
                `
                }else{
                    html = `
                    <div class="lg:sticky top-24 max-w-md mx-auto lg:max-w-full lg:mx-0">
                    <div class=" rounded-lg p-4 mt-16 pt-7">
                        <div class="flex justify-center">
                            <img src="${data.thumbnail}" alt="GTA V Cover Small" class="rounded-md aspect-[3/4] object-cover" id="thumbnail-image" onerror="this.onerror=null;this.src='https://placehold.co/300x400/1e1e1e/ffffff?text=GTA+V';">
                        </div>
                        <p class="text-gray-400 text-sm mt-4">${badge}</p> 
                        <div class="flex items-baseline space-x-2 mt-1">
                            <p class="text-3xl font-bold text-white">₹${data.offerPrice}</p>
                            <p class="text-lg text-gray-500 line-through">₹${data.price}</p>
                        </div>

                        <div class="mt-6 space-y-3">
                            <button class="w-full bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 rounded-lg transition-colors duration-200">Buy Now</button>
                            <button id="add-to-cart-btn" class="w-full bg-[#3a3a3a] hover:bg-[#4a4a4a] text-white font-bold py-3 rounded-lg transition-colors duration-200" data-variantId="${data._id}" onclick="addToCart(this)">Add to Cart</button>
                            <button id="add-to-wishlist-btn" class="w-full border border-[#404044] hover:bg-[#2a2a2a] text-white font-bold py-3 rounded-lg transition-colors duration-200" onclick="addToWishlist(this)">Add to Wishlist</button>
                        </div>
                    </div>
                     <div class="text-sm text-gray-400 mt-6 space-y-3">
                        <div class="flex justify-between"><span>Developer</span> <span class="text-white font-semibold">${data.developer}</span></div>
                    </div>
                </div>
                `
                }
                

                infoParant.innerHTML = html

            })
            .catch(error =>{
                console.log(error)
            })
    }
    </script>