<script>
        // Custom Tailwind CSS configuration
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        sans: ['Inter', 'sans-serif'],
                    },
                    colors: {
                        'dark': '#121212',
                        'card-bg': '#1A1A1A',
                        'input-bg': '#2C2C2C',
                        'border-color': '#333333',
                        'text-light': '#F5F5F5',
                        'text-medium': '#A9A9A9',
                        'primary-blue': '#4B4DFF',
                        'primary-blue-hover': '#6A6BFF',
                        'green-checkout': '#4caf50'
                    }
                }
            }
        }
    </script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #121212;
            color: #E0E0E0;
            box-sizing: border-box;
        }

        #main-container {
            box-sizing: border-box;
        }

        #brand-logo {
            width: 150px;
        }

        .my-swal-border {
            border: 1px solid #404044 !important;
            border-radius: 15px !important;
        }

        .hide-scrollbar::-webkit-scrollbar {
            width: 0.5em;
            display: none;
        }

        /* For Firefox */
        .hide-scrollbar {
            scrollbar-width: none;
        }

        .my-swal-border {
		border: 1px solid #404044 !important;
		/* Change color and thickness */
		border-radius: 15px !important;
	}

        @media (max-width: 480px) {
            #brand-logo {
                width: 120px;
            }
        }
    </style>

            <!-- Main section content for Cart Page -->
            <div class="w-full">
                <h1 class="text-2xl md:text-3xl font-bold mb-6">My Cart</h1>
                <div class="flex flex-col lg:flex-row gap-8">
                    <!-- Cart Items Section -->
                    <div class="flex-grow flex flex-col gap-6" id="products-container">
                        <!-- Item Card 1 -->
                        

                    </div>

                    <!-- Order Summary Section -->
                    <div class="w-full lg:w-96 flex-shrink-0" id="checkout-container">

                        
                    </div>
                </div>
            </div>
        </div>


    <!-- Coupon Modal -->
    <div id="coupon-modal" class="fixed inset-0 bg-black bg-opacity-70 flex justify-center items-center z-[1000] hidden">
        <div class="bg-card-bg border border-border-color rounded-xl p-6 w-full max-w-lg mx-4 relative">
            <!-- Close button -->
            <button onclick="hideModal()" class="absolute top-4 right-4 text-text-medium hover:text-text-light transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-6 h-6">
                    <path d="M18 6L6 18M6 6l12 12"></path>
                </svg>
            </button>
            <h2 class="text-xl font-bold text-text-light mb-6">Available Coupons</h2>
            <div class="space-y-4">
                <!-- Coupon Card 1 -->
                <div class="bg-input-bg rounded-lg border border-dashed border-border-color p-4 flex items-center justify-between">
                    <div>
                        <span class="text-lg font-bold text-text-light block">₹499 Off</span>
                        <span class="text-sm font-medium text-text-medium block">GETSONIC499</span>
                        <span class="text-xs text-text-medium mt-1 block">Valid until 01 February 2026</span>
                    </div>
                    <button class="text-sm text-primary-blue hover:underline">Apply</button>
                </div>
                <!-- Coupon Card 2 -->
                <div class="bg-input-bg rounded-lg border border-dashed border-border-color p-4 flex items-center justify-between">
                    <div>
                        <span class="text-lg font-bold text-text-light block">20% Off</span>
                        <span class="text-sm font-medium text-text-medium block">GETSONIC20</span>
                        <span class="text-xs text-text-medium mt-1 block">Valid until 01 February 2026</span>
                    </div>
                    <button class="text-sm text-primary-blue hover:underline">Apply</button>
                </div>
                <!-- Coupon Card 3 -->
                <div class="bg-input-bg rounded-lg border border-dashed border-border-color p-4 flex items-center justify-between">
                    <div>
                        <span class="text-lg font-bold text-text-light block">30% Off</span>
                        <span class="text-sm font-medium text-text-medium block">GETSONIC30</span>
                        <span class="text-xs text-text-medium mt-1 block">Valid until 01 February 2026</span>
                    </div>
                    <button class="text-sm text-primary-blue hover:underline">Apply</button>
                </div>
                <!-- Coupon Card 4 -->
                <div class="bg-input-bg rounded-lg border border-dashed border-border-color p-4 flex items-center justify-between">
                    <div>
                        <span class="text-lg font-bold text-text-light block">50% Off</span>
                        <span class="text-sm font-medium text-text-medium block">GETSONIC50</span>
                        <span class="text-xs text-text-medium mt-1 block">Valid until 01 February 2026</span>
                    </div>
                    <button class="text-sm text-primary-blue hover:underline">Apply</button>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript for modal functionality -->
    <script>
        document.addEventListener("DOMContentLoaded", ()=>{
            fetchPage()
        })


        function fetchPage(){
            fetch("/cart/details")
                .then(response =>{
                    if(!response.ok) throw new Error("Cant fetch cart details")
                    return response.json()
                })
                .then(data => {
                    console.log(data)
                    const productContainer = document.getElementById("products-container")
                    const checkoutDetails = document.getElementById("checkout-container")
                    let productHTML = ''
                    let checkoutHTML = ''
                    let preventCheckout = false
                    let details = data.checkoutDetails
                
                    if(data.products.length == 0){
                        productHTML += `
                                <div class="h-[90dvh] p-4 md:p-6 flex flex-col sm:flex-row items-center justify-end sm:items-start gap-4 m-6">
                                    <h2 class="text-xl font-semibold text-gray-400">Your cart is empty add something</h2>
                                </div>
                            `
                        productContainer.innerHTML = productHTML
                        return
                    }
                    data.products.forEach(product => {
                        if(!product.hasStock){
                            preventCheckout = true
                            productHTML += `
                            <div class="bg-card-bg border border-border-color rounded-xl p-4 md:p-6 flex flex-col sm:flex-row items-center sm:items-start gap-4 relative">
                            <h3 class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-xl font-semibold text-red-500">Out Of Stock</h3>
                            <div class="w-full h-auto sm:w-28 sm:h-auto opacity-[0.3]">
                                <img src="${product.thumbnail}" alt="Five Nights at Freddy's: Secret Of The Mimic" class="w-16 h-auto sm:w-28 sm:h-auto rounded-lg object-cover flex-shrink-0">
                            </div>
                            <div class="flex-grow w-full">
                                <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center w-full opacity-[0.3]">
                                    <h3 class="text-xl font-semibold text-text-light">${product.name}</h3>
                                    <span class="text-xl font-bold text-text-light mt-2 sm:mt-0">₹${product.price * product.quantity}</span>
                                </div>
                                <span class="text-sm font-medium text-text-medium opacity-[0.3]">Base Game</span>
                                <p class="text-text-medium text-sm mt-2 mb-4 hidden sm:block opacity-[0.3]">${product.description}</p>
                                <div class="flex items-center gap-4 mt-4 text-sm font-medium">
                                    <button class="text-text-medium hover:text-text-light transition-colors" id="remove-btn" data-productid="${product.productId}" data-variantid="${product._id}" onclick="removeFromCart(this)">Remove</button>
                                    <span class="text-text-medium opacity-[0.3]">|</span>
                                    <div class="flex items-center gap-2">
                                        <button class="quantity-btn p-1.5 rounded-full bg-input-bg hover:bg-border-color transition-colors " data-productid="${product.productId}" data-variantid="${product._id}" onclick="decrementQuantity(this)">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-text-light" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                                            </svg>
                                        </button>
                                        <input type="number" class="w-12 text-center bg-input-bg border border-border-color rounded-lg text-text-light focus:outline-none focus:ring-2 focus:ring-primary-blue" value="${product.quantity}" min="1" readonly>
                                        <button class="opacity-[0.3] quantity-btn p-1.5 rounded-full bg-input-bg hover:bg-border-color transition-colors cursor-not-allowed" data-productid="${product.productId}" data-variantid="${product._id}" onclick="incrementQuantity(this)" disabled>
                                            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-text-light" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        `
                        }else{
                            productHTML +=`
                                <div class="bg-card-bg border border-border-color rounded-xl p-4 md:p-6 flex flex-col sm:flex-row items-center sm:items-start gap-4">
                                    <div class="w-full h-auto sm:w-28 sm:h-auto">
                                        <img src="${product.thumbnail}" alt="Five Nights at Freddy's: Secret Of The Mimic" class="w-16 h-auto sm:w-28 sm:h-auto rounded-lg object-cover flex-shrink-0">
                                    </div>
                                    <div class="flex-grow w-full">
                                        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center w-full">
                                            <h3 class="text-xl font-semibold text-text-light">${product.name}</h3>
                                            <span class="text-xl font-bold text-text-light mt-2 sm:mt-0">₹${product.price * product.quantity}</span>
                                        </div>
                                        <span class="text-sm font-medium text-text-medium">Base Game</span>
                                        <p class="text-text-medium text-sm mt-2 mb-4 hidden sm:block">${product.description}</p>
                                        <div class="flex items-center gap-4 mt-4 text-sm font-medium">
                                            <button class="text-text-medium hover:text-text-light transition-colors" data-productid="${product.productId}" data-variantid="${product._id}" onclick="removeFromCart(this)">Remove</button>
                                            <span class="text-text-medium">|</span>
                                            <div class="flex items-center gap-2">
                                                <button class="quantity-btn p-1.5 rounded-full bg-input-bg hover:bg-border-color transition-colors" data-productid="${product.productId}" data-variantid="${product._id}" onclick="decrementQuantity(this)">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-text-light" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                                                    </svg>
                                                </button>
                                                <input type="number" class="w-12 text-center bg-input-bg border border-border-color rounded-lg text-text-light focus:outline-none focus:ring-2 focus:ring-primary-blue" value="${product.quantity}" min="1" readonly>
                                                <button class="quantity-btn p-1.5 rounded-full bg-input-bg hover:bg-border-color transition-colors" data-productid="${product.productId}" data-variantid="${product._id}" onclick="incrementQuantity(this)">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-text-light" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                                                    </svg>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `
                        }
                    })


                    
                    if(preventCheckout){
                        checkoutHTML+=`
                            <div class="bg-card-bg border border-border-color rounded-xl p-6 sticky top-8">
                            <h2 class="text-xl font-bold mb-4">Order Summary</h2>
                            <div class="space-y-4 text-text-light">
                                <div class="flex justify-between items-center">
                                    <span class="text-text-medium">${details.items} Items</span>
                                    <span class="font-medium">₹${details.price}</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-text-medium">Delivery charges</span>
                                    <span class="font-medium text-green-500">Free</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-text-medium">GST Amount</span>
                                    <span class="font-medium">₹${details.gstAmount}</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-text-medium">Sub Total</span>
                                    <span class="font-medium">₹${details.subTotal}</span>
                                </div>
                                <div class="flex justify-between items-center border-b border-border-color pb-4">
                                    <span class="text-text-medium">Discount</span>
                                    <span class="font-medium text-red-500">-₹${details.discounts}</span>
                                </div>
                                <a href="#" onclick="showModal()" class="text-primary-blue text-sm font-semibold hover:underline">Show available coupons</a>
                                <div class="flex gap-2 items-center mt-2">
                                    <input type="text" placeholder="Apply Coupon" class="w-full px-4 py-2 bg-input-bg border border-border-color rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-blue">
                                    <button class="bg-primary-blue hover:bg-primary-blue-hover text-white px-4 py-2 rounded-lg transition-colors text-sm font-medium">Apply</button>
                                </div>
                                <div class="flex justify-between items-center pt-4 border-t border-border-color">
                                    <span class="text-lg font-bold">Total Price</span>
                                    <span class="text-2xl font-bold">₹${details.total}</span>
                                </div>
                                <button class="w-full bg-gray-600 hover:bg-gray-700 text-white font-bold py-3 px-6 rounded-xl transition-colors cursor-not-allowed" diabled>
                                    Check out
                                </button>
                            </div>
                        </div>
                        `     
                    }else{
                        checkoutHTML+=`
                            <div class="bg-card-bg border border-border-color rounded-xl p-6 sticky top-8">
                            <h2 class="text-xl font-bold mb-4">Order Summary</h2>
                            <div class="space-y-4 text-text-light">
                                <div class="flex justify-between items-center">
                                    <span class="text-text-medium">${details.items} Items</span>
                                    <span class="font-medium">₹${details.price}</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-text-medium">Delivery charges</span>
                                    <span class="font-medium text-green-500">₹${details.deliveryCharge}</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-text-medium">GST Amount</span>
                                    <span class="font-medium">₹${details.gstAmount}</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-text-medium">Sub Total</span>
                                    <span class="font-medium">₹${details.subTotal}</span>
                                </div>
                                <div class="flex justify-between items-center  pb-4">
                                    <span class="text-text-medium">Discount</span>
                                    <span class="font-medium text-red-500">-₹${details.discounts}</span>
                                </div>
                                
                                <div class="flex justify-between items-center pt-4 border-t border-border-color">
                                    <span class="text-lg font-bold">Total Price</span>
                                    <span class="text-2xl font-bold">₹${details.total}</span>
                                </div>
                                <a href="/checkout" class="mt-6"><button class="mt-6 w-full bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-xl transition-colors">
                                    Check out
                                </button></a>
                            </div>
                        </div>
                        `     
                    }
                                           

                    productContainer.innerHTML = productHTML
                    checkoutDetails.innerHTML = checkoutHTML

                })
                .catch(error => {
                    console.log(error)
                })
        }


        function removeFromCart(button){
            let productId = button.dataset.productid
            let variantId = button.dataset.variantid 
            fetch(`/cart/remove?_id=${productId}&variantId=${variantId}`, {method:"POST"})
                .then(response =>{
                    if(response.status == 401) return response.json()
                    if(!response.ok) throw new Error("failed to fetch data")
                    fetchPage()
                    const quantityControl = button.parentElement;
                    const quantityInput = quantityControl.querySelector('input[type="number"]');
                    let currentValue = parseInt(quantityInput.value, 10);
                    quantityInput.value = currentValue + 1;
                    (function(){
                        const cartBadge = document.getElementById("cart-item-count")
                        fetch('/api/cart/get-count')
                        .then(async response => {
                            const res = await response.json()
                            console.log(res.count)
                            console.log(cartBadge)
                            if(!response.ok){
                                cartBadge.textContent = 0
                            }else{
                                cartBadge.textContent = res
                            }

                        }).catch(err => console.log(err))
                    })();
                })
                .then(data => {
                    Swal.fire({
                        title: data.message,
                        icon: "warning",
                        background: "#242428",
                        color: 'white',
                        customClass: {
                            popup: 'my-swal-border'
                        }
                    });
                    
                })
                .catch(error =>{
                    console.log(error)
                })
        }


        function showModal() {
            const modal = document.getElementById('coupon-modal');
            modal.classList.remove('hidden');
        }

        function hideModal() {
            const modal = document.getElementById('coupon-modal');
            modal.classList.add('hidden');
        }


        function incrementQuantity(button) {
            let productId = button.dataset.productid
            let variantId = button.dataset.variantid 
            fetch(`/cart/add?_id=${productId}&variantId=${variantId}`, {method:"POST"})
                .then(response =>{
                    if(response.status == 401) return response.json()
                    if(!response.ok) throw new Error("failed to fetch data")
                    fetchPage()
                    const quantityControl = button.parentElement;
                    const quantityInput = quantityControl.querySelector('input[type="number"]');
                    let currentValue = parseInt(quantityInput.value, 10);
                    quantityInput.value = currentValue + 1;
                })
                .then(data => {
                    Swal.fire({
                        title: data.message,
                        icon: "warning",
                        background: "#242428",
                        color: 'white',
                        customClass: {
                            popup: 'my-swal-border'
                        }
                    });
                })
                .catch(error =>{
                    console.log(error)
                })
        }

        function decrementQuantity(button) {
            let productId = button.dataset.productid
            let variantId = button.dataset.variantid 
            fetch(`/cart/decrement?_id=${productId}&variantId=${variantId}`, {method:"POST"})
                .then(response =>{
                    if(response.status == 401) return response.json()
                    if(!response.ok) throw new Error("failed to fetch data")
                    fetchPage()
                    const quantityControl = button.parentElement;
                    const quantityInput = quantityControl.querySelector('input[type="number"]');
                    let currentValue = parseInt(quantityInput.value, 10);
                    if (currentValue > 1) {
                        quantityInput.value = currentValue - 1;
                    }
                })
                .then(data => {
                    Swal.fire({
                        title: data.message,
                        icon: "warning",
                        background: "#242428",
                        color: 'white',
                        customClass: {
                            popup: 'my-swal-border'
                        }
                    });
                })
                .catch(error =>{
                    console.log(error)
                })
        }
    </script>
    