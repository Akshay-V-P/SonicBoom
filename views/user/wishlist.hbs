<script>
        // Custom Tailwind CSS configuration
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        sans: ['Inter', 'sans-serif'],
                    },
                    colors: {
                        'dark': '#121212',
                        'card-bg': '#1A1A1A',
                        'input-bg': '#2C2C2C',
                        'border-color': '#333333',
                        'text-light': '#F5F5F5',
                        'text-medium': '#A9A9A9',
                        'primary-blue': '#4B4DFF',
                        'primary-blue-hover': '#6A6BFF',
                        'green-checkout': '#4caf50'
                    }
                }
            }
        }
    </script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #121212;
            color: #E0E0E0;
            box-sizing: border-box;
        }

        #main-container {
            box-sizing: border-box;
        }

        #brand-logo {
            width: 150px;
        }

        .my-swal-border {
            border: 1px solid #404044 !important;
            border-radius: 15px !important;
        }

        .hide-scrollbar::-webkit-scrollbar {
            width: 0.5em;
            display: none;
        }

        .hide-scrollbar {
            scrollbar-width: none;
        }

        .my-swal-border {
            border: 1px solid #404044 !important;
            border-radius: 15px !important;
        }

        @media (max-width: 480px) {
            #brand-logo {
                width: 120px;
            }
        }
    </style>

            <!-- Main section content for Cart Page -->
            <div class="w-full">
                <h1 class="text-2xl md:text-3xl font-bold mb-6">My Wishlist</h1>
                <div class="flex flex-col lg:flex-row gap-8">
                    <!-- Cart Items Section -->
                    <div class="flex-grow flex flex-col gap-6 items-center" id="products-container">
                        <!-- Item Card 1 -->
                        

                    </div>
                </div>
            </div>
        </div>


    <script>
        document.addEventListener("DOMContentLoaded", ()=>{
            fetchPage()
        })


        function fetchPage(){
            fetch("/user/api/wishlist/details")
                .then(response =>{
                    if(!response.ok) throw new Error("Can't fetch cart details")
                    return response.json()
                })
                .then(data => {
                    console.log(data)
                    const productContainer = document.getElementById("products-container")
                    const checkoutDetails = document.getElementById("checkout-container")
                    let productHTML = ''
                    let checkoutHTML = ''
                    let preventCheckout = false
                
                    if(data.length == 0){
                        productHTML += `
                                <div class="h-[90dvh] p-4 md:p-6 flex flex-col sm:flex-row items-center justify-end sm:items-start gap-4 m-6">
                                    <h2 class="text-xl font-semibold text-gray-400">Your wishlist is empty add something</h2>
                                </div>
                            `
                        productContainer.innerHTML = productHTML
                        return
                    }
                    data.forEach(product => {
                        productHTML +=`
                                <div class="bg-card-bg border border-border-color rounded-xl p-4 md:p-6 flex flex-col sm:flex-row items-center sm:items-start gap-4 w-[70%]">
                                    <div class="w-full h-auto sm:w-28 sm:h-auto">
                                        <img src="${product.thumbnail}" alt="Five Nights at Freddy's: Secret Of The Mimic" class="w-16 h-auto sm:w-28 sm:h-auto rounded-lg object-cover flex-shrink-0">
                                    </div>
                                    <div class="flex-grow w-full">
                                        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center w-full">
                                            <h3 class="text-xl font-semibold text-text-light">${product.name}</h3>
                                            <span class="text-xl font-bold text-text-light mt-2 sm:mt-0">â‚¹${product.offerPrice}</span>
                                        </div>
                                        <span class="text-sm font-medium text-text-medium">Base Game</span>
                                        <p class="text-text-medium text-sm mt-2 mb-4 hidden sm:block">${product.description}</p>
                                        <div class="flex items-center gap-4 mt-4 text-sm font-medium">
                                            <button class="text-text-medium hover:text-text-light transition-colors" data-productid="${product.productId}" data-variantid="${product._id}" onclick="removeFromWishlist(this)">Remove</button>
                                            <span class="text-text-medium">|</span>
                                            <button class="text-text-medium hover:text-text-light transition-colors" data-productid="${product.productId}" data-variantid="${product._id}" onclick="addToCart(this)">Add to cart</button>
                                        </div>
                                    </div>
                                </div>
                            `
                    })                    

                    productContainer.innerHTML = productHTML

                })
                .catch(error => {
                    console.log(error)
                })
        }


        function addToCart(button) {
                const productId = button.dataset.productid;
                const variantId = button.dataset.variantid;
                fetch(`/user/cart/add?_id=${encodeURIComponent(productId)}&variantId=${encodeURIComponent(variantId)}`, { method: "POST" })
                    .then(response => {
                        if (!response.ok) throw new Error("Product cant add to cart")
                        console.log("fetched to cart")
                        setTimeout(() => {
                            addToCartBtn.textContent = originalText;
                            addToCartBtn.classList.remove('bg-green-checkout', 'packed-animation');
                        }, 2000);
                        return response.json()
                    })
                    .then(data => {
                        fetchPage()
                        Swal.fire({
                            title: 'Added to Cart!',
                            text: `Product has been added to your cart.`,
                            icon: 'success',
                            background: "#242428",
                            showConfirmButton:false,
                            timer:1500,
                            color: 'white',
                            customClass: {
                                popup: 'my-swal-border'
                            }
                        });
                    })
                    .catch(error => console.log(error))
            }


        function removeFromWishlist(button){
            let productId = button.dataset.productid
            let variantId = button.dataset.variantid 
            fetch(`/user/api/wishlist/remove?_id=${productId}&variantId=${variantId}`, {method:"POST"})
                .then(response =>{
                    if(response.status == 401) return response.json()
                    if(!response.ok) throw new Error("failed to fetch data")
                    fetchPage()
                    const quantityControl = button.parentElement;
                    const quantityInput = quantityControl.querySelector('input[type="number"]');
                    let currentValue = parseInt(quantityInput.value, 10);
                    quantityInput.value = currentValue + 1;
                })
                .then(data => {
                    Swal.fire({
                        title: data.message,
                        icon: "warning",
                        background: "#242428",
                        color: 'white',
                        customClass: {
                            popup: 'my-swal-border'
                        }
                    });
                })
                .catch(error =>{
                    console.log(error)
                })
        }

    </script>
    