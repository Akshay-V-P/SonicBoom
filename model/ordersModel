const mongoose = require('mongoose')
const { v4: uuidv4 } = require('uuid')

function generateOrderId() {
    const uniquePart = uuidv4().replace(/-/g, "").slice(0, 12);
    const uuid = `ORD${uniquePart.toUpperCase()}`
  return uuid;
}
const orderSchema = mongoose.Schema({
    couponId: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'coupons',
        default:null
    },
    userId: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'users',
        required:true
    },
    paymentMethod: {
        type: String,
        required:true
    },
    status: {
        type: String,
        enum:['pending', 'processing', 'deliverd', 'cancelled', 'payment failed'],
        default: 'pending',
        required:true
    },
    paymentStatus: {
        type: String,
        enum:['paid', 'unpaid', 'failed'],
        required:true
    },
    orderId: {
        type: String,
        default:generateOrderId,
        unique:true,
        required:true
    },
    subTotal: {
        type: Number,
        required:true
    },
    discount: {
        type: Number,
        required:true
    },
    deliveryCharge: {
        type: String,
        default:"Free",
        required:true
    },
    total: {
        type: Number,
        required:true
    },
    orderItems: {
        type: [{
            itemId: { type: mongoose.Schema.Types.ObjectId, ref: 'products', required: true },
            variantId: { type: mongoose.Schema.Types.ObjectId, required: true },
            status:{type:String, enum:['pending', 'processing', 'deliverd', 'cancelled', 'payment failed'], default:"pending", required:true},
            quantity:{type:Number, required:true}
        }]
    },
    reason: {
        type: String,
    },
    address: {
        type: {
            name: { type: String, required: true },
            address: { type: String, required: true },
            district: { type: String, required: true },
            city: { type: String, required: true },
            state: { type: String, required: true },
            pincode: { type: Number, required: true },
            mobile: { type: String, required: true },
            email: { type: String, required: true },
            landmark: { type: String },
            addressType: { type: String, required: true, default: 'home' },            
        }
    }
}, {
    timestamps:true
})


module.exports = mongoose.model('orders', orderSchema)